name: Build and Release
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with: 
        fetch-depth: 0

    - name: Extract or Generate version
      shell: bash
      run: |
        LAST_VERSION=$(git describe --tags --abbrev=0)
        if [[ $LAST_VERSION == "" ]]; then
          LAST_VERSION="v0.0.0"
        fi
        VERSION=$(git log -1 --pretty=%B | grep -o 'v[0-9]\+\.[0-9]\+\.[0-9]\+')
        if [[ $VERSION == "" ]]; then
          IFS='.' read -ra PARTS <<< "${LAST_VERSION:1}"
          NEW_PATCH=$((PARTS[2] + 1))
          VERSION="v${PARTS[0]}.${PARTS[1]}.$NEW_PATCH"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Generate changelog
      run: git log -1 --pretty=format:"%s" ${{ env.VERSION }} > changelog.txt

    - name: Build Game
      run: .\BuildGame.bat

    - name: Wait for build to complete
      shell: bash
      run: while [ ! -f ./Releases/ZombieSurvivalRPG_${{ env.VERSION }}.7z ]; do sleep 1; done

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        body_path: changelog.txt
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Releases/ZombieSurvivalRPG_${{ env.VERSION }}.7z
        asset_name: ZombieSurvivalRPG_${{ env.VERSION }}.7z
        asset_content_type: application/x-7z-compressed
