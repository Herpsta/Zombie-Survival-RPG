name: Build and Release

on:
  push:
    branches:
      - main
    paths:
      - 'Releases/*'

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with: 
        fetch-depth: 0  # Fetches all history for all branches and tags
        lfs: true  # Fetch Git LFS objects

    # Debugging: List contents of Releases directory
    - name: List contents of Releases directory
      run: ls -l ./Releases

    # Debugging: Print environment variables
    - name: Print environment variables
      run: env

    # Extract version and set environment variable
    - name: Extract version and set environment variable
      run: |
        $files = Get-ChildItem -Path ./Releases/*.7z
        Write-Host "Files: $files"
        if ($files -ne $null -and $files.Count -gt 0) {
          $version = $files | ForEach-Object { $_.Name -match "v(\d+\.\d+\.\d+)" | Out-Null; $matches[1] }
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append
        } else {
          Write-Host "No .7z files found in ./Releases"
          exit 1
        }
      shell: pwsh

    - name: Delete existing tag
      run: |
        git tag -d ${{ env.VERSION }} || true
        git push origin :refs/tags/${{ env.VERSION }} || true

    - name: Create and push new tag
      run: |
        git tag -a ${{ env.VERSION }} -m "Release ${{ env.VERSION }}"
        git push origin ${{ env.VERSION }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        body: 'Description of the release'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Run Unity Tests
      run: |
        # Add your Unity test commands here

    - name: Log error
      if: failure()
      run: echo "An error occurred in the previous steps"
